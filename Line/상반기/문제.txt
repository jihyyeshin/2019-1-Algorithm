1. 
문제 설명
유클리드 공간에서, 넓이가 N인 직사각형 두 변을 각각 w, h라 한다. 이때 가능한 w, h 중 |w - h|의 최솟값을 구하시오.

조건
사각형의 넓이 N (1 <= N <= 10^13), 변의 길이 w, h는 모두 자연수이다.

입력 형식
사각형 넓이 N을 표준 입력에서 읽는다.

출력 형식
|w - h|의 최솟값을 표준 출력에 쓴다.
2.
문제 설명
화학식은 원소 기호와 원소 개수 조합으로 표현한다. (원래 숫자는 아랫 첨자로 표기하지만, 편의상 일반적인 숫자 표기로 대체한다.)

올바른 형식이 아닌 화학식을 입력받아, 올바른 형식으로 바꾸어 출력하는 프로그램을 작성하시오.

입력은 원소 기호들이 앞에 모여있고 뒤에 원소 개수들이 모여있는 형식이며, 세부 규칙은 아래와 같다.

원소 기호는 대문자 1개 또는 대문자 1개+소문자 1개이다.
원소 개수 N은 1 <= N <= 10 이다. N = 1일 경우 출력할 때 숫자를 생략한다.
잘못된 데이터 형식(원소와 원소 개수의 짝이 맞지 않는 경우)인 경우에 error라고 출력한다.

3.
문제 설명
두 개의 테이블이 주어졌을 때, 두 테이블을 왼쪽 외부 조인(left outer join) 한 결과를 출력하시오.

테이블 1과 테이블 2에서 id 열은 기본 키(primary key) 이고, 일대일의 관계이다.
테이블 2의 id 열은 테이블 1 id 열의 외래 키(foreign key) 이다.
테이블 1
id	name	occupation
5	Brown	Accountant
2	Cony	Programmer
3	Sally	Doctor
1	James	Singer
4	Moon	Dancer
테이블 2
id	city	zip
2	Seoul	10008
7	Busan	40002
5	Gwangju	20009
6	Daegu	30008
3	Seoul	40005
1	Seoul	50006
왼쪽 외부 조인 결과 테이블
id	name	occupation	city	zip
1	James	Singer	Seoul	50006
2	Cony	Programmer	Seoul	10008
3	Sally	Doctor	Seoul	40005
4	Moon	Dancer	NULL	NULL
5	Brown	Accountant	Gwangju	20009
입력 형식
첫 줄에는 헤더를 포함한 행의 수를 입력한다.
다음 줄에는 헤더를 입력한다.
헤더의 첫번째 열은 id이다.
id를 포함해 최대 3개의 열을 공백(" ")으로 구분하여 입력한다.
모든 행은 헤더에서 지정한 수의 열을 갖고 있다.
id 값은 32비트 정수형, 나머지 값은 모두 문자열이다.
위와 같은 테이블을 2개 입력한다.
출력 형식
첫 줄에는 왼쪽 외부 조인 결과 테이블의 헤더를 출력한다.
헤더를 제외한 행은 id로 오름차순 정렬하여 한 줄에 한 행을 출력한다.
열들은 하나의 공백(" ")으로 분리한다.
빈 열은 대문자 NULL을 출력한다.

4. 
문제 설명
img.jpg

위 그림과 같이 다양한 높이의 빌딩이 일직선 상에 세워져 있다. 이때 가로축은 일직선 상의 위치를, 세로축은 빌딩의 높이를 의미한다. 우리는 빌딩 사이에 지면과 평행하게 밧줄을 연결하려고 한다. 이 때 가장 긴 밧줄의 길이를 구하시오.

조건
밧줄은 한 빌딩의 꼭대기에서 시작하여 다른 빌딩에 연결한다.
두 빌딩 사이에 높이가 같거나 더 높은 다른 빌딩이 있다면 서로 연결할 수 없다.
위치 x1, x2인 두 빌딩 사이에 밧줄을 연결한다면 밧줄의 길이는 |x1 - x2|이다.
입력 형식
표준 입력의 첫째 줄에서 빌딩의 개수 N (2 <= N <= 1,000,000)을 읽는다.
둘째 줄 부터 N개의 줄에 걸쳐 빌딩의 높이 h (1 <= h <= 1,000,000)를 순서대로 읽는다. 이 때 x번째 줄에 입력한 빌딩의 위치는 x이다.
출력 형식
가장 긴 밧줄의 길이를 표준 출력에 쓴다.

5. 
문제 설명
연인 코니와 브라운은 광활한 들판에서 '나 잡아 봐라' 게임을 한다. 이 게임은 브라운이 코니를 잡거나 코니가 너무 멀리 달아나면 끝난다. 게임이 끝나는데 걸리는 최소 시간을 구하시오.

조건
코니는 처음 위치에서 1초 후 1만큼 움직이고, 이 후에는 가속이 붙어 매 초마다 이전 이동 거리 + 1 만큼 움직인다. 즉, 시간에 따른 코니의 위치는 C, C + 1, C + 3, C + 6, ...이다.
브라운은 현재 위치 B에서 다음 순간 B - 1, B + 1, 2 * B 중 하나로 이동할 수 있다.
코니와 브라운의 위치 x는 0 <= x <= 200,000이다.
브라운은 범위를 벗어나는 위치로는 이동할 수 없고, 코니가 범위를 벗어나면 게임이 끝난다.
입력 형식
표준 입력의 첫 줄에서 코니의 위치 C와 브라운의 위치 B를 공백으로 구분하여 순서대로 읽는다.

출력 형식
브라운이 코니를 잡을 수 있는 최소 시간 N초의 N을 표준 출력에 쓴다.
브라운이 코니를 잡지 못한 상태로 게임이 끝나면 표준 출력에 -1을 쓴다.
예
입력: 11 2
출력: 5

코니의 위치: 11, 12, 14, 17, 21, 26, ...
브라운의 위치: 2, 3, 6, 12, 13, 26, ...

브라운은 코니를 5초 만에 잡을 수 있다.